#@ load("@ytt:data", "data")

apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ data.values.name
  labels:
    app.kubernetes.io/name: #@ data.values.name
spec:
  replicas: #@ data.values.replicas
  selector:
    matchLabels:
      app.kubernetes.io/name: #@ data.values.name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: #@ data.values.name
    spec:
      containers:
      - name: main
        image: #@ data.values.image.repository + ":" + data.values.image.tag
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        #@ if data.values.db.enabled.helm or data.values.db.enabled.crossplane.local or data.values.db.enabled.crossplane.google or data.values.db.enabled.crossplane.aws or data.values.db.enabled.crossplane.azure:
        env:
          - name: DB_ENDPOINT
            #@ if data.values.db.enabled.crossplane.local:
            value: #@ data.values.db.id + "-postgresql"
            #@ elif data.values.db.enabled.helm:
            value: postgresql
            #@ else:
            valueFrom:
             secretKeyRef:
               name: #@ data.values.db.id
               key: endpoint
            #@ end
          - name: DB_PORT
            #@ if data.values.db.enabled.helm or data.values.db.enabled.crossplane.local:
            value: "5432"
            #@ else:
            valueFrom:
              secretKeyRef:
                name: #@ data.values.db.id
                key: port
            #@ end
          - name: DB_USER
            #@ if data.values.db.enabled.helm or data.values.db.enabled.crossplane.local:
            value: postgres
            #@ else:
            valueFrom:
              secretKeyRef:
                name: #@ data.values.db.id
                key: username
            #@ end
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                #@ if data.values.db.enabled.crossplane.google or data.values.db.enabled.crossplane.aws or data.values.db.enabled.crossplane.azure:
                name: #@ data.values.db.id
                key: password
                #@ elif data.values.db.enabled.helm:
                name: postgresql
                key: postgres-password
                #@ else:
                name: #@ data.values.db.id + "-postgresql"
                key: postgres-password
                #@ end
          - name: DB_NAME
            #@ if data.values.db.enabled.helm or data.values.db.enabled.crossplane.local:
            value: #@ data.values.name
            #@ else:
            value: #@ data.values.db.id
            #@ end
          #@ if data.values.fga.enabled:
          - name: FGA_API_URL
            value: http://openfga.openfga:8080
          - name: FGA_STORE_ID
            value: #@ data.values.fga.storeId
          - name: FGA_MODEL_ID
            value: #@ data.values.fga.modeId
          #@ end
        #@ end
      #@ if data.values.otel.enabled:
      - image: otel/autoinstrumentation-go
        name: instrumentation
        env:
          - name: OTEL_GO_AUTO_TARGET_EXE
            value: /usr/local/bin/cncf-demo
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: #@ data.values.otel.jaegerAddr
          - name: OTEL_SERVICE_NAME
            value: #@ data.values.name
          - name: OTEL_PROPAGATORS
            value: tracecontext,baggage
        securityContext:
          privileged: true
          runAsUser: 0
      shareProcessNamespace: true
      #@ end
